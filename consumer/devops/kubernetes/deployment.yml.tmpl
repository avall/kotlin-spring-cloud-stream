apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
    app.kubernetes.io/name: ${APP_NAME}
    app.kubernetes.io/version: ${GITHUB_SHA}
    app.kubernetes.io/managed-by: github
    app.kubernetes.io/component: pod
    app.kubernetes.io/part-of: ${APP_NAME}-svc
  annotations:
    app: ${APP_NAME}
    env: ${APP_ENV}
spec:
  replicas: ${DEPLOYMENT_REPLICAS}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      containers:
      - name: ${APP_NAME}
        image: ${REPOSITORY_URL}/${APP_NAME}:${GITHUB_SHA}
        imagePullPolicy: Always
        ports:
        - containerPort: ${APP_SERVER_PORT}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: ${LIVENESSHEALTHCHECK}
            port: ${APP_SERVER_PORT}
          initialDelaySeconds: 60
          periodSeconds: 70
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: ${READINESSHEALTHCHECK}
            port: ${APP_SERVER_PORT}
          initialDelaySeconds: 70
          periodSeconds: 80
          successThreshold: 1
        resources:
          limits:
            cpu: 1
            memory: "1024Mi"
          requests:
            cpu: 500m
            memory: "512Mi"
        env:
        - name: APP_PROFILE
          value: ${APP_PROFILE}
        - name: APP_SERVER_PORT
          value: '${APP_SERVER_PORT}'
        - name: APP_POSTGRES_HOST
          value: ${APP_POSTGRES_HOST}
        - name: APP_POSTGRES_USER
          value: ${APP_POSTGRES_USER}
        - name: APP_POSTGRES_PORT
          value: '5432'
        - name: APP_POSTGRES_DB
          value: ${APP_POSTGRES_DB}
        - name: APP_POSTGRES_PASSWORD
          value: ${APP_POSTGRES_PASSWORD}
        - name: APP_POSTGRES_SCHEMA
          value: ${APP_POSTGRES_SCHEMA}
        - name: APP_OAUTH_SERVER
          value: ${APP_OAUTH_SERVER}
        - name: APP_OAUTH_SERVER_CERTS
          value: ${APP_OAUTH_SERVER_CERTS}
        - name: APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_COMMAND
          value: ${APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_COMMAND}
        - name: APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_GROUP
          value: ${APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_GROUP}
        - name: APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_ERROR
          value: ${APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_ERROR}
        - name: APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_RETENTIONTIME
          value: '${APP_TOPIC_EXECUTE_CREATE_CRM_DOCUMENT_RETENTIONTIME}'
        - name: APP_KAFKA_BROKERS
          value: ${APP_KAFKA_BROKERS}
        - name: APP_KAFKA_REPLICATION_FACTOR
          value: '${APP_KAFKA_REPLICATION_FACTOR}'
        - name: APP_KAFKA_SECURITY_PROTOCOL
          value: ${APP_KAFKA_SECURITY_PROTOCOL}
        - name: APP_KAFKA_TRUSTSTORE
          value: ${APP_KAFKA_TRUSTSTORE}
        - name: APP_GATEWAY_URL
          value: ${APP_GATEWAY_URL}
        - name: LOGSTASH_HOST
          value: '${LOGSTASH_HOST}:${LOGSTASH_PORT}'
        - name: LOGSTASH_PORT
          value: '${LOGSTASH_PORT}'