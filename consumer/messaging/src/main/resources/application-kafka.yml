spring:
  # kafka
  cloud:
    function.routing-expression: (headers['X-Tenant'].equals('xx') ) ? 'consumer':null
    stream:
      default-binder: kafka
      function:
        definition: "consumer"
        routing.enabled: true

      bindings:
        # consumer
        consumer-in-0:
          destination: ${APP_TOPIC_EXECUTE_CREATE_ATTACHMENTS_COMMAND:command.create-documents}
          group: ${APP_TOPIC_EXECUTE_CREATE_ATTACHMENTS_GROUP:group.documents}
          consumer:
            concurrency: 6

      kafka:
        bindings:
          consumer-in-0:
            consumer:
              #              auto-commit-offset: false
              #              auto-commit-on-error: false
              enable-dlq: true
              dlq-name: ${APP_TOPIC_EXECUTE_CREATE_ATTACHMENTS_ERROR:command.create-documents.dlq}
              dlq-partitions: 1
              topic:
                properties:
                  retention.ms: ${APP_TOPIC_EXECUTE_CREATE_ATTACHMENTS_RETENTIONTIME:604800000}

        binder:
          brokers: ${APP_KAFKA_BROKERS:localhost:29092}
          replication-factor: ${APP_KAFKA_REPLICATION_FACTOR:1}
          auto-create-topics: true
          auto-add-partitions: true
#          required-acks: all
          consumer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringDeserializer
            value.serializer: org.springframework.kafka.support.serializer.JsonDeserializer
          configuration:
            security.protocol: ${APP_KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
            ssl.truststore.location: ${APP_KAFKA_TRUSTSTORE:}
#            auto.offset.reset: earliest

